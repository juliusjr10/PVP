// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PVP.Server.Data;

#nullable disable

namespace PVP.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240313192513_TestUserContext")]
    partial class TestUserContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("PVP.Server.Models.CheckIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mood")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserHabitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserHabitId");

                    b.ToTable("CheckIns");
                });

            modelBuilder.Entity("PVP.Server.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("PVP.Server.Models.Habit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("PVP.Server.Models.HabitUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HabitId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.HasIndex("UserId");

                    b.ToTable("HabitUser");
                });

            modelBuilder.Entity("PVP.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PVP.Server.Models.WeekDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HabitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("PVP.Server.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PVP.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PVP.Server.Models.CheckIn", b =>
                {
                    b.HasOne("PVP.Server.Models.HabitUser", "UserHabit")
                        .WithMany("CheckIns")
                        .HasForeignKey("UserHabitId");

                    b.Navigation("UserHabit");
                });

            modelBuilder.Entity("PVP.Server.Models.HabitUser", b =>
                {
                    b.HasOne("PVP.Server.Models.Habit", null)
                        .WithMany("HabitUser")
                        .HasForeignKey("HabitId");

                    b.HasOne("PVP.Server.Models.User", null)
                        .WithMany("HabitUser")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PVP.Server.Models.WeekDay", b =>
                {
                    b.HasOne("PVP.Server.Models.Habit", "Habit")
                        .WithMany("WeekDays")
                        .HasForeignKey("HabitId");

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("PVP.Server.Models.Habit", b =>
                {
                    b.Navigation("HabitUser");

                    b.Navigation("WeekDays");
                });

            modelBuilder.Entity("PVP.Server.Models.HabitUser", b =>
                {
                    b.Navigation("CheckIns");
                });

            modelBuilder.Entity("PVP.Server.Models.User", b =>
                {
                    b.Navigation("HabitUser");
                });
#pragma warning restore 612, 618
        }
    }
}
